
#include <Windows.h>
#include <stdlib.h>
#include <sddl.h>
#include <stdio.h>
#include "tchar.h"
#pragma comment(lib, "Advapi32.lib")

int _tmain(int argc, _TCHAR* argv[])
{
	BYTE bSID[SECURITY_MAX_SID_SIZE];
	BOOL bRVal;
	DWORD dwSidSize = SECURITY_MAX_SID_SIZE;
	 DWORD dw;
	LPTSTR szSID = NULL;

	TCHAR szUserName[256], szDomainName[256];
	DWORD dwUserSize = 255;
	DWORD dwDomainSize = 255;
	
	SID_NAME_USE snu = SidTypeInvalid;

    FILE *fd;
	fd=fopen("C:\\TEST\\OUTPUT.txt","w");

	//find the current user's name
	if(!(GetUserName(szUserName, &dwUserSize))){
		printf("Error getting username.\n");
		dw = GetLastError();
	//	printf("%d\n",dw);
		exit(EXIT_FAILURE);
	} else {
	//	printf("Username acquired.\n");
	//	printf("%s\n",szUserName);
	//	printf("%d\n",dwUserSize);
	}
	    

	bRVal = LookupAccountName(
		NULL, //use this system
		szUserName, //the user to look up
		bSID, //the returned SID
		&dwSidSize, //the size of the SID returned
		szDomainName, //the returned domain name
		&dwDomainSize, //the size of the domain name
		&snu //the type of sid
		);

  //  printf("Brval=%d\n",bRVal);
	//bRVal = ConvertSidToStringSid(bSID, &szSID);

	//output values
	//_tprintf(_T("SID %ls for %s in %s domain.\n"), szSID, szUserName, szDomainName);
    fprintf(fd,"%s\\%s\n",szDomainName,szUserName);
	//clean up
	LocalFree(szSID);
	szSID = NULL;
	fclose(fd);

	return 0;
}


